// eslint-disable-next-line no-unused-vars
const convertFoo = ( modelElement, { writer } ) => (
	<div class="lol foo bar" style="background:blue;color:white;" data-foo={ modelElement.getAttribute( 'foo' ) }>
		Foo bar
		<div class="inner-lol">
			<attribute:strong>LOL, it works!</attribute:strong>
		</div>
		<empty:img/>
		<raw:p renderFunction={ foo }></raw:p>
	</div>
);

/**
 * JSX LOL plugin.
 * @param editor
 * @constructor
 *
 * This requires babel plugins in webpack config:
 *	{
 *		test: /\.ckx$/,
 *		use: {
 *			loader: 'babel-loader',
 *			options: {
 *				plugins: [
 *					'@babel/plugin-syntax-jsx',
 *					[
 *						'@babel/plugin-transform-react-jsx',
 *						{
 *							runtime: 'classic',
 *							pragma: 'writer.createNestedElement',
 *							pragmaFrag: '"DocumentFragment"',
 *							throwIfNamespace: false
 *						}
 *					]
 *				]
 *			}
 *		}
 *	}
 *
 * with mentioned plugins to be installed. Pragma fragment is not added.
 */
function LOL( editor ) {
	editor.model.schema.register( 'lol', {
		allowIn: '$root',
		isObject: true,
		isSelectable: true
	} );

	editor.conversion.for( 'upcast' ).elementToElement( {
		view: {
			name: 'div',
			classes: 'lol'
		},
		model: 'lol'
	} );

	editor.conversion.for( 'downcast' ).elementToElement( {
		model: 'lol',
		view: convertFoo
	} );
}

function foo( domElement ) {
	domElement.innerHTML = '<span>Inner HTML</span>';
}

export default LOL;
